name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-fmt-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check formatting
      run: cargo fmt --check

  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "v1-rust" # can be updated if we need to reset caches due to non-trivial change in the dependencies (for example, custom env var were set for single workspace project)
    - name: Install latest nextest release
      uses: taiki-e/install-action@nextest
      if: runner.os != 'Windows'

    - name: Test with latest nextest release
      uses: actions-rs/cargo@v1
      if: runner.os != 'Windows'
      env:
        RUST_LOG: ${{ runner.debug && 'limbo_core::storage=trace' || '' }}
      with:
        command: nextest
        args: run --profile ci --verbose
      timeout-minutes: 10

    - name: Build
      if: runner.os == 'Windows'
      run: cargo build --verbose
    - name: Test
      if: runner.os == 'Windows'
      env:
        RUST_LOG: ${{ runner.debug && 'limbo_core::storage=trace' || '' }}
      run: cargo test --verbose
      timeout-minutes: 10

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Clippy
        run: |
          cargo clippy --workspace --all-features --all-targets --exclude limbo-wasm --exclude sqlite3-parser -- -A clippy::all -W clippy::correctness -W clippy::perf -W clippy::suspicious --deny=warnings
      - name: Clippy `limbo-wasm` crate `nodejs` feature
        run: |
          cargo clippy --package limbo-wasm --features nodejs --all-targets --no-deps -- -A clippy::all -W clippy::correctness -W clippy::perf -W clippy::suspicious --deny=warnings
      - name: Clippy `limbo-wasm` crate `web` feature
        run: |
          cargo clippy --package limbo-wasm --no-default-features --features web --all-targets --no-deps -- -A clippy::all -W clippy::correctness -W clippy::perf -W clippy::suspicious --deny=warnings

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: wasm-pack build --target nodejs bindings/wasm

  test-limbo:
    runs-on: ubuntu-latest
    steps:
      - name: Install cargo-c
        env:
          LINK: https://github.com/lu-zero/cargo-c/releases/download/v0.10.7
          CARGO_C_FILE: cargo-c-x86_64-unknown-linux-musl.tar.gz
        run: |
          curl -L $LINK/$CARGO_C_FILE | tar xz -C ~/.cargo/bin

      - uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --all-extras --dev --all-packages

      - uses: "./.github/shared/install_sqlite"
      - name: Test
        run: make test
        timeout-minutes: 10

  test-sqlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: "./.github/shared/install_sqlite"
      - name: Test
        run: SQLITE_EXEC="sqlite3" make test-compat

